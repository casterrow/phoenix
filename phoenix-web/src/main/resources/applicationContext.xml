<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xsi:schemaLocation=
		"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://cxf.apache.org/jaxrs	http://cxf.apache.org/schemas/jaxrs.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">
	
	
	<context:component-scan base-package="com.phoenix" />
	
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 导入cxf的配置文件 -->
	<!-- <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/> -->
	
	<!-- 发布restful webservice服务 -->
	<!-- <jaxrs:server id="" address="">
		<jaxrs:extensionMappings>
			<entry key="json" value="application/json" />
			<entry key="xml" value="application/xml" />
		</jaxrs:extensionMappings>
		
		<jaxrs:providers>
			<bean class="org.apache.cxf.jaxrs.provider.JSONProvider" />
		</jaxrs:providers>
	</jaxrs:server> -->
	
	
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean> -->
	
	<!-- 
		Date: Jul 10, 2015
		数据源 JNDI方式 ，为了方便在Tomcat和JBoss中都能使用，建议是用JNDI的方式配置数据源。
		Tomcat读取JNDI数据源语法：java:comp/env/数据库JNDI名称，或者直接数据库JNDI名称
		JBoss读取JNDI数据源语法：java:jboss/数据库JNDI名称，或者java:/数据库JNDI名称
		在数据源里配置<property name="resourceRef" value="true" />，表示读取数据源配置
		Tomcat读取的是context.xml文件里配置的数据源
		JBoss读取的是jboss-web.xml文件里配置的数据源
	-->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>jdbc/search</value>
		</property>
		<property name="resourceRef" value="true" />
	</bean>
	
	<!-- 数据连接管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<!-- 事务注解支持-->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 
		事务传播行为和事务隔离机制
		事务传播行为默认是propagation="REQUIRED"
		事务隔离级别默认是isolation="DEFAULT"，使用数据库的默认隔离级别
	-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="query*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="txService" expression="execution(* com.phoenix.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txService" />
	</aop:config>
	
	<bean id="phoenixJob" class="" />
	
	<bean id="phoenixTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" value="phoenixJob" />
		<property name="targetMethod" value="" />
	</bean>
	
	<bean id="phoenixTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" value="phoenixTask" />
		<property name="cronExpression" value=""></property>
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="phoenixTrigger" />
			</list>
		</property>
	</bean>
</beans>